'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRenderedWidth = exports.getRenderedHeight = exports.getRenderedSize = undefined;

var _constants = require('./constants');

var _element = require('./element');

// constants
var mainContainer = void 0;

/**
 * @function getRenderedSize
 *
 * @description
 * get the rendered height and width of the ReactElement passed based on a given containerWidth
 *
 * @param {ReactElement} element the element to get the rendered size of
 * @param {number} containerWidth the width in pixels of the container to render in
 * @param {Object} [containerOptions={}] additional options for generating the container
 * @returns {{height: number, width: number}} the size of the rendered ReactElement
 */


// element
var getRenderedSize = exports.getRenderedSize = function getRenderedSize(element, containerWidth) {
  var containerOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var container = containerOptions.container,
      _containerOptions$doc = containerOptions.doc,
      doc = _containerOptions$doc === undefined ? document : _containerOptions$doc,
      _containerOptions$typ = containerOptions.type,
      type = _containerOptions$typ === undefined ? _constants.DEFAULT_CONTAINER_ELEMENT : _containerOptions$typ;


  if (!mainContainer) {
    mainContainer = (0, _element.getMainContainer)(doc);

    doc.body.appendChild(mainContainer);
  }

  var renderContainer = (0, _element.getNewContainer)(doc, type, container, containerWidth || doc.documentElement.clientWidth);

  mainContainer.appendChild(renderContainer);

  var renderedElement = (0, _element.getRenderedElement)(renderContainer, element);
  var size = {
    height: renderedElement.offsetHeight,
    width: renderedElement.offsetWidth
  };

  mainContainer.removeChild(renderContainer);

  return size;
};

/**
 * @function getRenderedHeight
 *
 * @description
 * shortcut method to get only the height property from getRenderedSize
 *
 * @param {...Array<*>} args the arguments to pass to getRenderedSize
 * @returns {number} the rendered height
 */
var getRenderedHeight = exports.getRenderedHeight = function getRenderedHeight() {
  var size = getRenderedSize.apply(undefined, arguments);

  return size.height;
};

/**
 * @function getRenderedWidth
 *
 * @description
 * shortcut method to get only the width property from getRenderedSize
 *
 * @param {...Array<*>} args the arguments to pass to getRenderedSize
 * @returns {number} the rendered width
 */
var getRenderedWidth = exports.getRenderedWidth = function getRenderedWidth() {
  var size = getRenderedSize.apply(undefined, arguments);

  return size.width;
};

exports.default = getRenderedSize;